name: End to End

on:
  push:
    branches:
    - main
    - actions
  workflow_dispatch:  # manual trigger

env:
  tf_version: 0.14.3
  tf_dir: Deploy/Terraform/environment

jobs:

  dev_infra_apply:
    runs-on: ubuntu-latest
    env:
      env_name: DEV
    # defaults:
    #   run:
    #     working-directory: ${{ env.tf_dir }}
    environment:
      name: DEV
    outputs:
      webapp_url: ${{ steps.get_webapp_url.outputs.webapp_url }}
    steps:
    - uses: actions/checkout@master

    # - uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}

    # - name: Setup Authentication for TF
    #   uses: Azure/cli@v1
    #   with:
    #     inlineScript: | 
    #       echo "ARM_SUBSCRIPTION_ID=$(az account show --query="id" -o tsv)" >> $GITHUB_ENV
    #       echo "ARM_CLIENT_ID=$(az account show --query="user.name" -o tsv)" >> $GITHUB_ENV
    #       echo "ARM_CLIENT_SECRET=$(jq '.clientSecret' -r <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV
    #       echo "ARM_TENANT_ID=$(az account show --query="tenantId" -o tsv)" >> $GITHUB_ENV
    # - name: Download plan
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: ${{ env.env_name }}-tf-plan
    #     path: ${{ github.workspace }}/${{ env.tf_dir }}
    
    # - name: Install TF
    #   uses: hashicorp/setup-terraform@v1
    #   with:
    #     terraform_version: ${{ env.tf_version }}

    # - name: Init TF
    #   run: terraform init --backend-config="key=${{ env.env_name }}.terraform.tfstate"

    # - name: TF Apply
    #   run: terraform apply -no-color -input=false -auto-approve out.plan
    
    - id: get_webapp_url
      name: Output web app URL
      run: |
        #url="$(terraform output -raw slotURL)"
        url="myazurewebsite.net"
        fqdn="http://${url}"
        #fqdn="http://boo"
        echo "::set-output name=webapp_url::${fqdn}"
        echo "${fqdn}"
    
    # - name: Azure logout
    #   run: az logout

  dev_deploy:
    needs: dev_infra_apply
    runs-on: ubuntu-latest
    environment:
      name: DEV
      url: ${{ needs.dev_infra_apply.outputs.webapp_url }}
    steps:
    - run: |
        echo ${{ needs.dev_infra_apply.outputs.webapp_url }} is the url!